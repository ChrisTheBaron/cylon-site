---
title: Pebble with Cylon.js
author: The Hybrid Group
page_title: Pebble
page_subtitle: "<a href='https://github.com/hybridgroup/cylon-pebble' class='repository'>Repository</a> <a class+'issues' href='https://github.com/hybridgroup/cylon-pebble/issues'>Issues</a>"
layout: documentation
page_title_show: true

pebble_driver: true
---

%section.intro
  = image_tag "/images/devices/pebble.jpg", class: "display"

  %p The Pebble is a smart watch, that connects via bluetooth.

  %p
    For more info about the Pebble platform click
    = succeed "." do
      = link_to "here", "http://getpebble.com/", target: :blank

%section.how-to
  %h2 How to install
  %p
    Installing Cylon.js with pebble support is pretty easy.

  :markdown
        :::bash
        npm install cylon-pebble
  %h2 How to use
  %p This small program receives message queue events from a Pebble smart watch.
  %h3 JavaScript
  :markdown
        :::javascript
        Cylon = require('cylon');

        Cylon.api({
          host: '0.0.0.0',
          port: '8080'
        });

        PebbleRobot = (function() {

          function PebbleRobot() {}

          PebbleRobot.prototype.connection = {
            name: 'pebble',
            adaptor: 'pebble'
          };

          PebbleRobot.prototype.device = {
            name: 'pebble',
            driver: 'pebble'
          };

          PebbleRobot.prototype.work = function(self) {
            var c;
            c = 100;
            return every(1..second(), function() {
              var str;
              c++;
              str = "c: " + c;
              self.pebble.message_queue().push(str);
              return console.log(self.pebble.last_message());
            });
          };

          return PebbleRobot;

        })();

        bot = new PebbleRobot();

        bot.name = 'pebble';

        Cylon.robot(bot);

        Cylon.start();

  %h3 CoffeeScript
  :markdown
        :::javascript
        Cylon = require('cylon')

        Cylon.api host: '0.0.0.0', port: '8080'

        class PebbleRobot
          connection:
            name: 'pebble', adaptor: 'pebble'

          device:
            name: 'pebble', driver: 'pebble'

          work: (self) ->
            c = 100
            every 1.second(), ->
              c++
              str = "c: \#{c}"
              self.pebble.message_queue().push(str)
              console.log(self.pebble.last_message())

        bot = new PebbleRobot()
        bot.name = 'pebble'
        Cylon.robot bot

        Cylon.start()

  %h2 How to connect
  %p This software requires version 1.12.0 of the Pebble watch firmware.

  %h3 OSX

  %p The main steps are:

  %ul
    %li Pair your computer and the Pebble
    %li Use a socket to serial connection to map a TCP socket to the local port
    %li Connect to the device via Cylon.js
    -#%li To figure out which port your pebble is connected to, use the Cylon.js connect scan command:

  -#:markdown
        -#:::bash
        -#$ Cylon.js connect scan

  -#%p Now you are ready to connect to the Sphero using the socket, in this example port 4567:

  -#:markdown
        -#:::bash
        -#Cylon.js connect serial 4567 pebble

  %h3 Ubuntu

  %p The main steps are:

  %ul
    %li Pair your computer and the Pebble
    %li Map your device to a port
    %li Use a socket to serial connection to map a TCP socket to the local port
    %li Connect to the device via Cylon.js
    %li You will need to pair with the Pebble, entering any needed password.

  -#%p Then you can find the Bluetooth address, for example 00:18:33:86:37:8B, by using the Cylon.js connect scan command:

  -#:markdown
        -#:::bash
        -#$ Cylon.js connect scan

  -#%p Once you know the address, you can use the Cylon.js connect bind command to map a port to the device:

  -#:markdown
        -#:::bash
        -#Cylon.js connect bind 00:18:33:86:37:8B pebble

  -#%p Now you are ready to connect to the Pebble using a socket, in this example port 4567:

  -#:markdown
        -#:::bash
        -#Cylon.js connect socat pebble 4567

%section.drivers
  %h2 Drivers
  %p There is only one driver for the Pebble platform, as listed below.

  .hardware
    .devices
      // TODO: Update drivers list at the top of the page.
      = partial "documentation/partials/devices_pebble_drivers"
