---
page_title_show: true
title: BLE with Cylon
author: The Hybrid Group
page_title: Platforms - BLE
page_subtitle: Cylon has an extensible system for connecting to hardware devices.
page_title_docs: BLE
page_subtitle_docs: "<a href='https://github.com/hybridgroup/cylon-ble' class='repository'>Repository</a>| <a class='issues' href='https://github.com/hybridgroup/cylon-ble/issues'>Issues</a>"
layout: documentation
subnav_platform: true
active_menu_platforms: true
subnavjs: true
---
%section.intro
  = image_tag "/images/devices/ble.jpg", class: "display"
  .info-intro
    %h4.subtitle= current_page.data.page_subtitle_docs
    :markdown
      Bluetooth Low Energy (BLE) is a newer standard for communicating with Bluetooth devices.
      It's focused on lower cost and power consumption.
      A number of newer hardware devices come with BLE on-board.

      `cylon-ble` can be used to communicate directly with BLE devices, requesting low-level details such as battery status and generic device info.
      It can also be used as an adaptor for more complicated modules that control larger-scale devices, such as the Orbotix Ollie.

      For more info about BLE click [here](http://www.bluetooth.com/Pages/Bluetooth-Smart.aspx).
  .clear

%section.how-to#HowToInstall
  :markdown
    ## How To Install

    Installing Cylon.JS support for BLE devices is done through NPM:

        $ npm install cylon-ble

%section.how-to#HowToUse
  :markdown
    ## How To Use

    Here's a basic BLE example to get the battery level of a device:

        :::javascript
        "use strict";

        var Cylon = require('cylon');

        Cylon.robot({
          connections: {
            bluetooth: { adaptor: 'ble', uuid: '207377654321' }
          },

          devices: {
            battery: { driver: 'ble-battery-service' }
          },

          work: function(my) {
            my.battery.getBatteryLevel(function(err, data) {
              if (!!err) {
                console.log("Error: ", err);
                return;
              }

              console.log("Data: ", data);
            });
          }
        }).start();

%section.how-to#HowToConnect
  :markdown
    ## How To Connect

    To start off, connect your BLE device to the computer you wish to use to communicate with it.
    Once connected, get the UUID of the device.

    We've written a script to help with finding BLE UUIDs:

        :::javascript
        "use strict";

        var noble = require('noble');

        noble.on('stateChange', function(state) {
          if (state === 'poweredOn') {
            console.log("Starting scan.");
            noble.startScanning();
          } else {
            console.log("Stopping scan.");
            noble.stopScanning();
          }
        });

        noble.on('discover', function(peripheral) {
          console.log("Peripheral discovered!")
          console.log("  Name: " + peripheral.advertisement.localName)
          console.log("  UUID: " + peripheral.uuid);
        });

    Once you have the UUID you need, you can setup your `cylon-ble` program as so:

        :::javascript
        Cylon.robot({
          connections: {
            bluetooth: { adaptor: 'ble', uuid: 'YOUR_DEVICE_UUID_HERE' }
          },

          // ...
        });

%section.drivers#Drivers
  .hardware
    .devices
      = partial "/partials/devices_for_platform", locals: { platform: "BLE"}
