---
layout: documentation
page_title_show: true
title: Cylon.JS Example - Sales Force
page_title: "Example: Sales Force"
author: The Hybrid Group
description: A Cylon.JS code example
page_subtitle: "You can find more versions of this example <a href='https://github.com/hybridgroup/cylon/tree/master/examples' target='blank' class='repository'>here.</a>"
---

:markdown
  # Sales Force

  First, let's import Cylon:

      :::ruby
      Cylon = require 'cylon'

  Now that we have Cylon imported, we can start defining our robot

      :::ruby
      Cylon.robot

  Let's define the connections and devices:

      :::ruby
        connection:
          name: 'sfcon'
          adaptor: 'force'
          sfuser: process.env.SF_USERNAME
          sfpass: process.env.SF_SECURITY_TOKEN
          orgCreds:
            clientId: process.env.SF_CLIENT_ID
            clientSecret: process.env.SF_CLIENT_SECRET
            redirectUri: 'http://localhost:3000/oauth/_callback'

        device: { name: 'salesforce', driver: 'force' }

  Now that Cylon knows about the necessary hardware we're going to be using, we'll
  tell it what work we want to do:

      :::ruby
        work: (me) ->
          me.salesforce.on 'start', () ->
            me.salesforce.subscribe '/topic/SpheroMsgOutbound', (data) ->
              msg = "Sphero: \#{data.sobject.Sphero_Name__c},"
              msg += "Bucks: \#{data.sobject.Bucks__c},"
              msg += "SM_Id: \#{data.sobject.Id}"

              console.log msg

          i = 0

          every 2.seconds(), () ->
            data = JSON.stringify { spheroName: "\#{me.name}", bucks: "\#{i}" }
            me.salesforce.push 'SpheroController', 'POST', data

  Now that our robot knows what work to do, and the work it will be doing that
  hardware with, we can start it:

      :::ruby
      .start()

