---
layout: documentation
page_title_show: true
title: Cylon.JS Example - Joystick - Xbox 360 Controller
page_title: "Example: Joystick - Xbox 360 Controller"
author: The Hybrid Group
description: A Cylon.JS code example
page_subtitle: "You can find more versions of this example <a href='https://github.com/hybridgroup/cylon/tree/master/examples/joystick_xbox_360' target='blank' class='repository'>here.</a>"
---

:markdown
  # Joystick - Xbox 360 Controller

  For this Cylon example, we'll demonstrate how to get input from a wired Xbox 360
  controller.

  Before we get started, make sure you've got `cylon-joystick` installed via NPM
  so we can connect to the controller.

  First, let's load up Cylon:

      :::coffeescript
      Cylon = require 'cylon'

  With that done, we can start defining our new robot.

      :::coffeescript
      Cylon.robot

  We'll be setting up a connection to our 360 controller, and also setting the
  controller up as a device the robot can talk to:

      :::coffeescript
        connection:
          name: 'joystick'
          adaptor: 'joystick'
          controller: 'xbox360'

        device:
          name: 'controller'
          driver: 'xbox360'

  With our connection to the controller established, we'll tell it what to do:

      :::coffeescript
        work: (my) ->

  Let's ask our robot to tell us when the face buttons on the controller (A, B, X,
  Y) are pressed and released:

      :::coffeescript
          ["a", "b", "x", "y"].forEach (button) ->
            my.controller.on "\#{button}:press", ->
              console.log "Button \#{button} pressed."

            my.controller.on "\#{button}:release", ->
              console.log "Button \#{button} released."

  Next up, when someone moves the left and right analog sticks, lets' print their
  current positions.

  Since the Xbox 360 controller's adaptor emits the `left:move`
  and `right:move` events even when the sticks aren't moved, we'll prevent it from
  emitting duplicate events, too:

      :::coffeescript
          lastPosition =
            left: { x: 0, y: 0 }
            right: { x: 0, y: 0 }

          my.controller.on "left:move", (pos) ->
            last = lastPosition.left
            unless pos.x is last.x and pos.y is last.y
              console.log "Left Stick:", pos

          my.controller.on "right:move", (pos) ->
            last = lastPosition.right
            unless pos.x is last.x and pos.y is last.y
              console.log "Right Stick:", pos

  And with our work defined, we can tell Cylon to start up our Robot:

      :::coffeescript
      Cylon.start()

