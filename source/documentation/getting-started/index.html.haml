---
title: Cylon.js Getting Started
author: The Hybrid Group
description: Artoo Platforms
page_title: Getting Started
page_subtitle: A Guide by Humans, for Humans.
layout: page
---

%section.intro

  = partial "../what_is_cylon"

%section.how-to
  %h2 How to setup your Node.js environment
  %h3 OSX and Windows
  %p 
  Go to the Node.js downloads page at 
  = link_to "http://nodejs.org/download/", "http://nodejs.org/download/" 
  download the installer file and run it.
  %h3 Linux
  %p 
  Follow the installation instructions at 
  =link_to "https://github.com/joyent/node/wiki/Installation", "https://github.com/joyent/node/wiki/Installation" 
  to install the latest Node.js
  
  %h2 How to Install
  %p Install the module with: 
  :markdown
        :::javascript
        npm install cylon 
  :markdown
    Then install modules for whatever hardware support you want to use from your robot. For example, `npm install cylon-firmata` to use Cylon with an Arduino using the Firmata protocol.
  
  %h2 Hardware Support
  %p
    Cylon.js has a extensible system for connecting to hardware devices. The following robotics and physical computing platforms are currently supported:
    %ul
      %li
        = link_to "Arduino", "http://www.arduino.cc/" 
        &lt;==&gt;
        = link_to "Adaptor", "https://github.com/hybridgroup/cylon-firmata"
      %li
        = link_to "Ardrone", "http://ardrone2.parrot.com/" 
        &lt;==&gt;
        = link_to "Adaptor", "https://github.com/hybridgroup/cylon-ardrone"
      %li
        = link_to "Sphero", "http://www.gosphero.com/" 
        &lt;==&gt;
        = link_to "Adaptor", "https://github.com/hybridgroup/cylon-sphero"
  %p Support for common shared device drivers, is provded using the General Purpose Input/Output (GPIO) module:
  %ul
    %li
      = link_to "GPIO", "https://en.wikipedia.org/wiki/General_Purpose_Input/Output" 
      &lt;==&gt;
      = link_to "Drivers", "https://github.com/hybridgroup/cylon-gpio"  
  %p More platforms and drivers are coming soon...

  %p
    Do you have some hardware that is not yet supported by Cylon? We want to help you, help us, help them! Get in touch...

%section.artoo-code
  %h2 Examples

  :markdown 
    **Note**: before running examples in the `examples/` dir from source, make sure to compile using `grunt coffee` first.

  %h4 Javascript
  :markdown
        :::javascript
        var Cylon = require("cylon");

        var robot = Cylon.robot({
          connection: { name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0' },
          device: { name: 'led', driver: 'led', pin: 13 },

          work: function(my) {
            // we do our thing here
            every((1).second(), function() { my.led.toggle(); });
          }
        });

        robot.start();

  %h4 CoffeeScript 
  :markdown
        :::javascript
        Cylon = require "cylon"

        robot = Cylon.robot
          connection:
            name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'

          device:
            name: 'led', driver: 'led', pin: 13

          work: (my) ->
            # we do our thing here
            every 1.second(), -> my.led.toggle()

        robot.start() 

  %h3 Writing your robot code:

  %p 
  Now you are ready to write your own code. Take a look at the 
  = link_to "examples", "https://github.com/hybridgroup/cylon/tree/master/examples" 
  directory for a whole bunch of code you can use to help get started. We recommend using Test-Driven Robotics (TDR) with your preferred test frameworks.

  %h3 Running your robot:

  :markdown
        :::ruby
        node robotfilename.js

  %p or
  
  :markdown
        :::ruby
        coffee robotfilename.coffee


%section.contributing
  %h2 Contributing

  %p 
    You can help cylon grow by contributing your code, new drivers or platforms to the project, check the Github page
    = link_to "cylon on github.","https://github.com/hybridgroup/cylon" 

  %ul
    %li Fork it
    %li Create your feature branch (git checkout -b my-new-feature)
    %li Commit your changes (git commit -am 'Add some feature')
    %li Push to the branch (git push origin my-new-feature)
    %li Create new Pull Request

%section.footer
