---
title: Artoo Platforms
author: The Hybrid Group
description: Artoo Platforms
page_title: Getting Started
page_subtitle: A Guide by Humans, for Humans.
layout: page
---

%section.intro

  = partial "../what_is_artoo"

%section.how-to
  %h2 How to setup your ruby environment
  %p
    First thing you'll need to do, to be able to run artoo is install ruby. For first time users we recomend using ruby MRI 2.0 or above,
    we also recomend using RVM to handle ruby installations (most of use it on a daily basis), you can install RVM and ruby using the following terminal commands.

  %h3 How to install RVM
  %p
    First we need to install RVM, you can do it by following the instructions below or for more detailed instructions go to
    %a{ href: "https://rvm.io/rvm/install" } https://rvm.io/rvm/install

  :markdown
        :::bash
        \curl -L https://get.rvm.io | bash -s stable

  %p
    Once the installation is complete, close your terminal and open a new one, you can make sure your RVM is installed
    correctly by running the following command "type rvm | head -n 1", you should see the "rvm is a function" output.

  :markdown
        :::bash
        type rvm | head -n 1
        rvm is a function

  %h3 How to install ruby 2.0
  %p
    Using RVM it is pretty easy to install and manage different ruby versions, to install ruby 2.0.0

  :markdown
        :::bash
        rvm install 2.0.0

  %h3 How to install rubinius 2.0
  %p
    If you need to control multiple robots, microcontrollers or devices at the same time you should be using Rubinius 2.0-rc1
    or higher. It is pretty easy to isntall using
    %a{ href:"https://rvm.io/" } RVM.

  :markdown
        :::bash
        rvm install rbx-2.0.0

  = partial "../platforms"

  %p
    Artoo also has support for devices that can work across multiple hardware platforms.
    %ul
      %li
        General Purpose Input/Output (GPIO) devices &lt;==&gt;
        = link_to "Drivers", "/documentation/drivers/"
      %li
        i2c devices &lt;==&gt;
        = link_to "Drivers", "/documentation/drivers/"

  %p
    Do you have some hardware that is not yet supported by Artoo? We want to help you, help us, help them! Get in touch...

%section.artoo-code
  %h2 Code to control robots with Artoo

  %h3 Example: Arduino with LED and a button

  :markdown
        :::ruby
        # ./my_robot.rb
        require 'artoo'

        # Circuit and schematic here: http://arduino.cc/en/tutorial/button
        connection :arduino, :adaptor => :firmata, :port => '/dev/ttyACM0'
        device :led, :driver => :led, :pin => 13
        device :button, :driver => :button, :pin => 2

        work do
          on button, :push => proc {led.toggle}
        end

  %h3 Parrot ARDrone 2.0

  :markdown
        :::ruby
        require 'artoo'

        connection :ardrone, :adaptor => :ardrone
        device :drone, :driver => :ardrone

        work do
          drone.start
          drone.take_off

          after(25.seconds) { drone.hover.land }
          after(30.seconds) { drone.stop }
        end

%section.installation

  %h3 Installation

  :markdown
        :::ruby
        gem install artoo
  %p
    Then install the gems required by the hardware you want to use. For
    example, if you wanted to use an XBox360 controller to fly your ARDrone:

  :markdown
        :::ruby
        gem install artoo-joystick
        gem install artoo-ardrone

  %h3 Writing your robot code:

  %p Now you are ready to write your own code. Take a look at the examples directory for a whole bunch of code you can use to help get started. We recommend using Test-Driven Robotics (TDR) with your preferred test frameworks.

  %h3 Running your robot:

  :markdown
        :::ruby
        ruby myrobot.rb

%section.contributing
  %h2 Contributing

  %p 
    You can help artoo grow by contributing your code, new drivers or platforms to the project, check the Github page
    = link_to "artoo on github.","https://github.com/hybridgroup/artoo" 

  %ul
    %li Fork it
    %li Create your feature branch (git checkout -b my-new-feature)
    %li Commit your changes (git commit -am 'Add some feature')
    %li Push to the branch (git push origin my-new-feature)
    %li Create new Pull Request

%section.footer
