:markdown
  ## turnOn

  Turns the light on.

  Also sets `this.isOn` to `true`.


  ### Returns

  - (<code>null</code>)

  * * *

  ## turnOff

  Turns the light off.

  Also sets `this.isOn` to `false`.


  ### Returns

  - (<code>null</code>)

  * * *

  ## toggle

  Toggles the light on or off


  ### Returns

  - (<code>null</code>)

  * * *

  ## alert

  Sets the light to an 'alert' state


  ### Returns

  - (<code>null</code>)

  * * *

  ## longAlert

  Sets the light to a longer 'alert' state


  ### Returns

  - (<code>null</code>)

  * * *

  ## white

  Sets the light to white


  ### Params


  - **colorTemp** (<code>Number</code>) the color temperature to use for "white"


  - **brightPercent** (<code>Number</code>) 0-100 brightness percentage to use


  ### Returns

  - (<code>null</code>)

  * * *

  ## brightness

  Sets the light's brightness


  ### Params


  - **percent** (<code>Number</code>) 0-100 brightness percentage to use


  ### Returns

  - (<code>null</code>)

  * * *

  ## hsl

  Sets the light's color via HSL


  ### Params


  - **hue** (<code>Number</code>) (0-359)


  - **saturation** (<code>Number</code>) (0-100)


  - **brightPercent** (<code>Number</code>) (0-100)


  ### Returns

  - (<code>null</code>)

  * * *

  ## xy

  Sets the light's color via the Philips Color coordinate system


  ### Params


  - **x** (<code>Number</code>) (0-1)


  - **y** (<code>Number</code>) (0-1)


  ### Returns

  - (<code>null</code>)

  * * *

  ## rgb

  Sets the light's color via RGB


  ### Params


  - **r** (<code>Number</code>) red (0-255)


  - **g** (<code>Number</code>) green (0-255)


  - **b** (<code>Number</code>) blue (0-255)


  ### Returns

  - (<code>null</code>)
