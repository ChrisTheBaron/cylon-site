:markdown
  ## registeredUsers

  Finds all registered users.


  ### Params


  - **callback** (<code>Function</code>) function to be triggered when users are found


  ### Returns

  - (<code>null</code>)

  * * *

  ## createUser

  Creates a new user


  ### Params


  - **username** (<code>String</code>) preferred username


  - **description** (<code>String</code>) description of new User


  - **callback** (<code>Function</code>) function to be triggered when user is created


  ### Returns

  - (<code>null</code>)

  * * *

  ## deleteUser

  Deletes the specified user


  ### Params


  - **username** (<code>String</code>) username of user to delete


  - **callback** (<code>Function</code>) function to be triggered when user is deleted


  ### Returns

  - (<code>null</code>)

  * * *

  ## locateBridges

  Returns info on known Hue bridges


  ### Params


  - **callback** (<code>Function</code>) function to be triggered with bridge info


  ### Returns

  - (<code>null</code>)

  * * *

  ## searchForBridges

  Searches for Hue bridges on the network


  ### Params


  - **callback** (<code>Function</code>) function to be triggered with bridge info


  ### Returns

  - (<code>null</code>)

  * * *

  ## config

  Obtains a summary of bridge configuration


  ### Params


  - **callback** (<code>Function</code>) function to be triggered with bridge info


  ### Returns

  - (<code>null</code>)

  * * *

  ## getFullState

  Obtains the complete status of a bridge


  ### Params


  - **callback** (<code>Function</code>) function to be triggered with bridge info


  ### Returns

  - (<code>null</code>)

  * * *

  ## lights

  Obtains all lights registered with the bridge


  ### Params


  - **callback** (<code>Function</code>) function to be triggered with lights info


  ### Returns

  - (<code>null</code>)
