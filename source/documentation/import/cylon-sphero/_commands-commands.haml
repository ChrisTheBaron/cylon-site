:markdown
  ## abortMacro

  Tells Sphero to abort the currently-running macro


  ### Returns

  - (<code>null</code>)

  * * *

  ## abortOrbBasicProgram

  Tells Sphero to abort the currently-running orbBasic program


  ### Returns

  - (<code>null</code>)

  * * *

  ## appendMacroChunck

  Tells Sphero to append a new macro chunk


  ### Returns

  - (<code>null</code>)

  * * *

  ## appendOrbBasicFragment

  Tells Sphero to append a new orbBasic program fragment


  ### Returns

  - (<code>null</code>)

  * * *

  ## configureCollisionDetection

  Tells Sphero to enable collision detection


  ### Returns

  - (<code>null</code>)

  * * *

  ## configureLocator

  Tells Sphero to enable sharing of locator data


  ### Returns

  - (<code>null</code>)

  * * *

  ## detectCollisions

  Tells Sphero to enable collision detection


  ### Returns

  - (<code>null</code>)

  * * *

  ## detectLocator

  Tells Sphero to enable sharing of locator data


  ### Returns

  - (<code>null</code>)

  * * *

  ## eraseOrbBasicStorage

  Tells Sphero to erase on-board orbBasic program storage


  ### Returns

  - (<code>null</code>)

  * * *

  ## executeOrbBasicProgram

  Tells Sphero to execute the stored orbBasic program


  ### Returns

  - (<code>null</code>)

  * * *

  ## finishCalibration

  Tells Sphero to end calibration mode, and resume normal operation


  ### Returns

  - (<code>null</code>)

  * * *

  ## getApplicationConfigurationBlock

  Tells Sphero to get the current application's configuration


  ### Returns

  - (<code>null</code>)

  * * *

  ## getConfigurationBlock

  Tells Sphero to get the configuration


  ### Returns

  - (<code>null</code>)

  * * *

  ## getDeviceMode

  Tells Sphero to get it's current mode


  ### Returns

  - (<code>null</code>)

  * * *

  ## getMacroStatus

  Tells Sphero to get the status of the currently running macro


  ### Returns

  - (<code>null</code>)

  * * *

  ## getPermanentOptionFlags

  Tells Sphero to return it's permanent option flags


  ### Returns

  - (<code>null</code>)

  * * *

  ## getRGB

  Tells Sphero to return the current color value of the internal LEDs


  ### Returns

  - (<code>null</code>)

  * * *

  ## getTemporaryOptionFlags

  Tells Sphero to return it's temporary option flags


  ### Returns

  - (<code>null</code>)

  * * *

  ## reInitializeMacroExecutive

  Tells Sphero to re-initialize the current macro


  ### Returns

  - (<code>null</code>)

  * * *

  ## readLocator

  Tells Sphero to read data from the locator


  ### Returns

  - (<code>null</code>)

  * * *

  ## roll

  Tells Sphero to roll at a specific speed, along a specific heading.

  Heading is considered relative to the last calibrated position.


  ### Params


  - **speed** (<code>Number</code>)


  - **heading** (<code>Number</code>)


  - **state** (<code>Number</code>)


  ### Returns

  - (<code>null</code>)

  * * *

  ## runMacro

  Tells Sphero to run the specified macro


  ### Returns

  - (<code>null</code>)

  * * *

  ## saveMacro

  Tells Sphero to save the specified macro


  ### Returns

  - (<code>null</code>)

  * * *

  ## saveTemporaryMacro

  Tells Sphero to save the specified macro as a temporary macro


  ### Returns

  - (<code>null</code>)

  * * *

  ## selfLevel

  Tells Sphero to self-level


  ### Returns

  - (<code>null</code>)

  * * *

  ## setAccelerometerRange

  Sets Sphero's accelerometer range


  ### Returns

  - (<code>null</code>)

  * * *

  ## setApplicationConfigurationBlock

  Sets Sphero's application configuration


  ### Returns

  - (<code>null</code>)

  * * *

  ## setBackLED

  Enables Sphero's rear tail-light LED


  ### Returns

  - (<code>null</code>)

  * * *

  ## setBoostWithTime

  Sets Sphero's boost duration.


  ### Returns

  - (<code>null</code>)

  * * *

  ## setColor

  Sets Sphero's color.


  ### Returns

  - (<code>null</code>)

  * * *

  ## setConfigurationBlock

  Sets Sphero's configuration block.


  ### Returns

  - (<code>null</code>)

  * * *

  ## setDataStreaming

  Tells Sphero to enable data streaming.


  ### Returns

  - (<code>null</code>)

  * * *

  ## setDeviceMode

  Sets Sphero's device mode.


  ### Returns

  - (<code>null</code>)

  * * *

  ## setHeading

  Sets Sphero's default (0) "heading" angle.


  ### Returns

  - (<code>null</code>)

  * * *

  ## setMacroParameter

  Sets a macro parameter for Sphero


  ### Returns

  - (<code>null</code>)

  * * *

  ## setMotionTimeout



  ### Returns

  - (<code>null</code>)

  * * *

  ## setPermanentOptionFlags

  Sets Sphero's permanent option flags


  ### Returns

  - (<code>null</code>)

  * * *

  ## setRGB

  Sets the color of Sphero's internal RGB LED


  ### Params


  - **color** (<code>Number</code>)


  - **persist** (<code>Boolean</code>)


  ### Returns

  - (<code>null</code>)

  * * *

  ## setRandomColor

  Sets Sphero's internal LED to a random color


  ### Returns

  - (<code>null</code>)

  * * *

  ## setRawMotorValues

  Allows for raw manipulation of Sphero's motors


  ### Returns

  - (<code>null</code>)

  * * *

  ## setRotationRate

  Directly sets Sphero's rotation rate


  ### Returns

  - (<code>null</code>)

  * * *

  ## setStabilization

  Enables or disables Sphero's automatic internal stabilization


  ### Returns

  - (<code>null</code>)

  * * *

  ## setTemporaryOptionFlags

  Sets Sphero's temporary option flags


  ### Returns

  - (<code>null</code>)

  * * *

  ## startCalibration

  Starts up Sphero's calibration mode, used to adjust the heading


  ### Returns

  - (<code>null</code>)

  * * *

  ## stop

  Tells Sphero to stop in place.


  ### Returns

  - (<code>null</code>)

  * * *

  ## submitValueToInputStatement



  ### Returns

  - (<code>null</code>)
