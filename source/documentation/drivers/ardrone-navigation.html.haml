---
title: Cylon.js - ARDrone Navigation Driver
author: The Hybrid Group
page_title: ARDrone Navigation
page_subtitle: Driver
layout: page
---
.documentation
  %section.intro
    =image_tag "/images/ardrone-navigation.jpg", class: "display"
    %p
      Allows user to receive in-flight navgation data from an ARDrone. Navigation data includes such information as the ARDrone's current pitch and yaw, along with many other data elements.

  %section.how-to
    %h2 How to establish a connection and setup the driver
    %p
      Communication with the ARDrone's navigation data interface takes place using a WiFi connection. The ARDrone is a WiFi access point, so it normally can be the only device you connect to, without some additional effort to reconfigure the drone itself to put it into infrastructure mode.

    :markdown
          :::ruby
          Cylon = require('..')

          Cylon.robot
            connection:
              name: 'ardrone', adaptor: 'ardrone', port: '192.168.1.1'

            devices:
              [
                {name: 'drone', driver: 'ardrone'},
                {name: 'nav', driver: 'ardroneNav'}
              ]

  %section.public-methods
    %h2 Events
    %ul 
      %li 
        %h3 update
        %small 
          This event will contain one of the following events.
          %br/  
          You can also subscribe to one of the specific events, if that is the information you are interested in.
      %li 
        %h3 navdata
        %p coming soon
        
      %li 
        %h3 landing
        %p coming soon

      %li 
        %h3 landed
        %p coming soon

      %li 
        %h3 takeoff
        %p coming soon

      %li 
        %h3 hovering
        %p coming soon

      %li 
        %h3 flying
        %p coming soon

      %li 
        %h3 lowBattery
        %p coming soon

      %li 
        %h3 batteryChange
        %p coming soon

      %li 
        %h3 altitudeChange
        %p coming soon

      -#%li 
        -#%h3 start
        -#%p 
      
    

    -#%h3 How to use events and call them on your drivers
    -#%p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on them as follows:
    -#:markdown
          -#:::ruby

  -#%section.how-to
    -#%h2 How to use
    -#%h3 Example of receiving navigation data from an ARDrone.
    -#:markdown
          -#:::ruby

  %section.compatability.hardware
    %h2 Works with:
    .devices
      = partial "documentation/partials/ardrone"
