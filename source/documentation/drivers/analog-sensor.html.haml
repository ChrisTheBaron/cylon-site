---
title: Cylon.js - Analog Sensor Driver
author: The Hybrid Group
page_title: Drivers
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: Analog Sensor
page_subtitle_docs: Driver
layout: documentation
page_title_show: true
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true

arduino_platform: true
spark_platform: true
beaglebone_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#gpio li:nth-child(1)").addClass("active-link");
    $(".accordion-docs dt:nth-child(9) a:nth-child(2) img").addClass("rotate");

%section.intro
  = image_tag "/images/devices/analog-sensor.jpg", class: "display"
  .info-intro
    %p
      Makes it possible to interact with analog inputs on your device and obtain values that represent the analog input send by the sensors.
      The value received from an analog input read from the sensor goes from 0 to 1027.

    %p
      For more information click
      = link_to "here.", "http://en.wikipedia.org/wiki/Sensor", target: "_blank"

  .clear

%section.how_to#HowToConnect
  %h2 How To Connect
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: {name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'},

          device: {name: 'sensor', driver: 'analogSensor', pin: 0, lowerLimit: 100, upperLimit: 900},
          ...


%section.how-to#HowToUse
  %h2 How To Use
  %p
    This example detects lower and upper limits on a photoresistor sensor.
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: {name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'},

          device: {name: 'sensor', driver: 'analogSensor', pin: 0, lowerLimit: 100, upperLimit: 900},

          work: function(my) {

            var analogValue = 0;

            every((1).second(), function() {
              analogValue = my.sensor.analogRead();
              Logger.info('Analog value => ', analogValue);
            });

            my.sensor.on('lowerLimit', function(val) {
              Logger.info("Lower limit reached!");
              Logger.info('Analog value => ', val);
            });

            my.sensor.on('upperLimit', function(val) {
              Logger.info("Upper limit reached!");
              Logger.info('Analog value => ', val);
            });
          }
        }).start();


%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_analog_sensor"
  .commands-api#Events
    = partial "/documentation/drivers/partials/gpio/events_analog_sensor"

%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p
  .image-circuit
    %img{:src => "/documentation/drivers/breadboards/gpio/analog_sensor_bb.png", :alt => ""}/
  .clear


%section.compatibility.hardware#Compatability
  %h2 Compatibility
  =# TODO: Update platform list with all that work with this driver in Cylon.js.
  .devices
    = partial "documentation/partials/devices_platforms"
