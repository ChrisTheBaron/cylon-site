---
title: Cylon.js - BlinkM Driver
author: The Hybrid Group
page_title: Drivers - BlinkM Driver
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: BlinkM
page_subtitle_docs: Driver
layout: documentation
page_title_show: true
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
subnavjs: true
---
%section.intro
  =image_tag "/images/devices/blinkm.jpg", class: "display"
  .info-intro
    :markdown
      Allows user to control BlinkM RGB LED via i2c interface.

      For more information click [here](http://thingm.com/products/blinkm/).

  .clear

%section#HowToConnect
  :markdown
    ## How To Connect

    Install the module with `npm install cylon-i2c`

        :::javascript
        Cylon.robot({
          connections: {
            arduino: { adaptor: 'firmata', port: '/dev/ttyACM0' }
          },

          devices: {
            led: { driver: 'led', pin: 13 }
          },
        });

%section#HowToUse
  :markdown
    ## How To Use

    Example, using a BlinkM LED with an Arduino:

        :::javascript
        "use strict";

        var Cylon = require("cylon");

        Cylon.robot({
          connections: {
            arduino: { adaptor: "firmata", port: "/dev/ttyACM0" }
          },

          devices: {
            blinkm: { driver: "blinkm" }
          },

          work: function(my) {
            my.blinkm.stopScript();

            my.blinkm.getFirmware(function(err, version) {
              console.log(err || "Started BlinkM version " + version);
            });

            my.blinkm.goToRGB(0, 0, 0);

            my.blinkm.getRGBColor(function(err, data) {
              console.log(err || "Starting Color: ", data);
            });

            every((2).seconds(), function() {
              my.blinkm.getRGBColor(function(err, data) {
                console.log(err || "Current Color: ", data);
              });
              my.blinkm.fadeToRandomRGB(128, 128, 128);
            });
          }
        }).start();

%section.public-methods
  .commands-api#Commands
    %h1 Commands
    = partial "/documentation/import/cylon-i2c/blinkm-commands"

%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p
  .image-circuit
    %img{:src => "/documentation/drivers/breadboards/i2c/blinkm_bb.png", :alt => ""}/
  .clear

%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "/partials/platforms_for_driver", locals: { driver: "BlinkM" }
