---
title: Cylon.js - Crazyflie Driver
author: The Hybrid Group
page_title: Crazyflie
page_subtitle: Driver
layout: documentation
page_title_show: true
subnav_driver: true

crazyflie_platform: true
---
%section.intro
  =image_tag "/images/devices/crazyflie-flight.jpg", class: "display"
  %p
    Allows user to send flight control commands to a Crazyflie micro-quadcopter. Flight control commands are those used to tell the Crazyflie to take off, land, and or any number of other autonomous flight manuvers.

%section.how-to#HowToConnect
  %h2 How To Connect
  %p
    Communication with the Crazyflie's flight control interface takes place using a 2.4GHz radio connection. The Crazyflie is controlled from your computer using a Crazyradio, which is a custom USB 2.4GHz radio device. 
  %h3 JavaScript
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'crazyflie', adaptor: 'crazyflie' },
          device: {name: 'drone', driver: 'crazyflie'},
        ...

  %h3 CoffeeScript
  :markdown
        :::javascript
        Cylon = require 'cylon'

        Cylon.robot
          connection:
            name: 'crazyflie', adaptor: 'crazyflie'

          device:
            name: 'drone', driver: 'crazyflie'
        ...


%section.how-to#HowToUse
  %h2 How To Use
  %h3 Examples
  %p This small program causes the Crazyflie to takeoff for 10 seconds.
  %h3 JavaScript
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'crazyflie', adaptor: 'crazyflie', port: 'radio://1/10/250KPS' },
          device: {name: 'drone', driver: 'crazyflie'},

          work: function(my) {
            my.drone.on('start', function() {
              my.drone.takeoff();
              after((10).seconds(), function() { 
                my.drone.land();
              });
              after((15).seconds(), function() { 
                my.drone.stop();
              });
            });
          }
        }).start();

  %h3 CoffeeScript
  :markdown
        :::javascript
        Cylon = require 'cylon'

        Cylon.robot
          connection:
            name: 'crazyflie', adaptor: 'crazyflie', port: "radio://1/10/250KPS"

          device:
            name: 'drone', driver: 'crazyflie'

          work: (my) ->
            my.drone.on 'start', ->
              my.drone.takeoff()
              after 10.seconds(), ->
                my.drone.land()
              after 15.seconds(), ->
                my.drone.stop()

        .start()

%section.public-methods
  .commands_api#Commands
    = partial "/documentation/drivers/partials/crazyflie/commands"
  .commands_api#Events
    = partial "/documentation/drivers/partials/crazyflie/events"

%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "documentation/partials/devices_platforms"
