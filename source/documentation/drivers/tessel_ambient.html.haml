---
title: Cylon.js - Tessel Ambient
author: The Hybrid Group
page_title: Tessel Module
page_subtitle: Cylon has a extensible system for connecting to hardware devices.
page_title_docs: Tessel Ambient
page_subtitle_docs: Module
layout: documentation
page_title_show: true
active_menu_docs: true
subnavjs: true

tessel_platform: true
---
-content_for :js_accordeon do
  :javascript
    $("#driver-panel").addClass("active-panel");
    $("#tessel li:nth-child(2)").addClass("active-link");
    $(".accordion-docs dt:nth-child(9) a:nth-child(2) img").addClass("rotate");

%section.intro
  =image_tag "/images/devices/tessel-ambient.jpg", class: "display"
  .info-intro
    %p The Ambient sensor can detect ambient light and sound levels.
    %p Clap to turn on the TV (paired with infrared) or know from a webapp if the lights are on at home.
    %ul
      %li The microphone is optimized for detecting the ambient noise level in a room or building a sound-activated device.
      %li The ambient light sensor and can be used for detecting fine-grain brightness in a room.
  .clear

%section.how-to#HowToConnect
  %h2 How To Connect
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'tessel', adaptor: 'tessel', port: 'A' },
          device: { name: 'ambient', driver: 'ambient-attx4' },
        ...


%section.how-to#HowToUse
  %h2 How To Use
  %p Example using a Direct Pin.
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'tessel', adaptor: 'tessel', port: 'A' },
          device: { name: 'ambient', driver: 'ambient-attx4' },
          work: function(my) {
            my.ambient.on('error', function (err) {
              console.log(err)
            });

            my.ambient.on('light', function (data) {
              console.log('Light stream: ' + data);
            });

            my.ambient.on('sound', function (data) {
              console.log('Sound stream: ' + data);
            });

            every((1).seconds(), function() {
              my.ambient.getLightLevel(function(err, data) {
                console.log('Current Light level: ' + data);
              });
              my.ambient.getSoundLevel(function(err, data) {
                console.log('Current Sound level:  ' + data);
              });
            });
          }
        }).start();



%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "documentation/partials/devices_platforms"
