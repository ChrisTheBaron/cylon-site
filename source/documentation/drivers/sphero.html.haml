---
title: Cylon.js - Sphero Driver
author: The Hybrid Group
page_title: Sphero
page_subtitle: Driver
layout: page
---
.documentation
  %section.intro
    =image_tag "/images/sphero.jpg", class: "display"
    %p
      Allows user to interact with the Sphero robotic sphero using Artoo.

  %section.how-to
    %h2 How to establish a connection and setup the driver
    %p
      That is pretty simple once the Sphero is ready (connected and listening), you just need three lines of code and you are set,
      Artoo and the Sphero driver take care of the rest.
    :markdown
          :::ruby
          Cylon = require('cylon')

          Cylon.robot
            connection:
              name: 'sphero', adaptor: 'sphero', port: '/dev/rfcomm0'

            device:
              name: 'sphero', driver: 'sphero'

  %section.public-methods
    %h2 Commands:
  
    %function-name abortMacro
    %function-params ()
    %function-return  → (ID,command number)
    %function-description 
    %br/ 
    %funtion-name  abortOrbBasicProgram
    %function-params ()
    %function-return  → Simple Response
    %function-description 
    %br/ 
    %funtion-name appendMacroChunck
    %function-params ()
    %function-return  → Simple Response
    %function-description  
    %br/ 
    %funtion-name appendOrbBasicFragment
    %function-params ()
    %function-return  → Simple Response
    %function-description  
    %br/ 
    %funtion-name configureCollisionDetection
    %function-params (Meth,(Xt, Yt),(Xspd, Yspd),Dead)
    %function-return  → Simple Response
    %function-description  
    %br/ 
    %funtion-name configureLocator
    %function-params (flag,(x,y),(Yaw,Tare))
    %function-return  → Simple Response
    %function-description  
    %br/ 
    %funtion-name detectCollisions 
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name eraseOrbBasicStorage
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name executeOrbBasicProgram
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name getApplicationConfigurationBlock
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name getConfigurationBlock
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name getDeviceMode
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name getMacroStatus
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name getPermanentOptionFlags
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name getRGB
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name getTemporaryOptionFlags
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name reInitializeMacroExecutive
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name readLocator
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name roll(speed, heading, state)
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name runMacro
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name saveMacro
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name saveTemporaryMacro
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name selfLevel
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setAccelerometerRange
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setApplicationConfigurationBlock
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setBackLED
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setBoostWithTime
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setColor(color, persist)
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setConfigurationBlock
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setDataStreaming
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setDeviceMode
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setHeading
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setMacroParameter
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setMotionTimeout
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setPermanentOptionFlags
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setRGB(color, persist) → [color, persist]
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setRawMotorValues
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setRotationRate
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setStabalisation
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name setTemporaryOptionFlags
    %function-params ()
    %function-return  → 
    %function-description  
    %br/ 
    %funtion-name stop → true | nil
    %function-params ()
    %function-return  → 
    %function-description 
    %br/ 
    %funtion-name submitValueToInputStatement
    %function-params ()
    %function-return  → 
    %function-description  



  %section.public-events
    %h2 Events:
    %ul 
      %li 
        %h3 update
        %small 
          This event will contain one of the following events.
          %br/  
          You can also subscribe to one of the specific events, if that is the information you are interested in.
      %li
        %h3 collision
        %p Gets triggered when the sphero hits something or falls from a step.
      %li
        %h3 messages(data)
        %p 
      %li 
        %h3 notifications(data)
        %p 
      %li 
        %h3 connect
        %p Opens the connection to Sphero.

      %li 
        %h3 start
        %p Sent when the device has been started and is ready to use.  

    -#%h3 How to use events and call them on your drivers
    -#%p
      -#Pretty simple, when the connection and the driver have been setup (as explained above)
      -#you can call events on the sphero driver as follows:
    -#:markdown
          -#:::ruby

  -#%section.how-to
    -#%h2 How to use
    -#%h3 Example to roll the sphero in a random direction and change direction every 3 seconds.
    -#:markdown
          -#:::ruby

  %section 
    %h2 Sphero Colors  

  %section.compatability.hardware
    %h2 Works with:
    =# TODO: Update platform list with all that work with this driver in artoo.
    .devices
      = partial "documentation/partials/sphero"
