---
title: Cylon.js - Pebble Driver
author: The Hybrid Group
page_title: Pebble
page_subtitle: Driver
layout: page
---
.documentation
  %section.intro
    =image_tag "/images/pebble.jpg", class: "display"
    %p
      Allows user to interact with Cylon.js devices using a Pebble smart watch.

  %section.how-to
    %h2 How to establish a connection and setup the driver
    %h3 JavaScript
    :markdown
          :::javascript
          Cylon = require('cylon');


          Cylon.api({
            host: '0.0.0.0',
            port: '8080'
          });

          robot = {
            connection: {
              name: 'pebble',
              adaptor: 'pebble'
            },
            device: {
              name: 'pebble',
              driver: 'pebble'
            },
    %h3 CoffeeScript
    :markdown
          :::javascript
          Cylon = require('cylon')

          Cylon.api host: '0.0.0.0', port: '8080'

          robot = 
            connection:
              name: 'pebble', adaptor: 'pebble'

            device:
              name: 'pebble', driver: 'pebble'
          ...
  %section.public-methods

    %h2 Commands
    %dl.methods 
      %dt message
      %dd 
      %dt message_queue
      %dd 
      %dt last_message
      %dd 

    %h2 Events
    %dl.methods 
      %dt Stop
      %dd Stop the driver.
      %dt start
      %dd Sent when the device has been started and is ready to use.


  %section.how-to
    %h2 How to use
    %h3 Example receiving message queue from a Pebble smart watch.
    %h3 JavaScript
    :markdown
          :::javascript
          Cylon = require('cylon');

          Cylon.api({
            host: '0.0.0.0',
            port: '8080'
          });

          robot = {
            connection: {
              name: 'pebble',
              adaptor: 'pebble'
            },
            device: {
              name: 'pebble',
              driver: 'pebble'
            },
            work: function(self) {
              var c;
              c = 0;
              return every(1..second(), function() {
                c++;
                self.pebble.message_queue().push(c);
                return console.log(self.pebble.last_message());
              });
            }
          };

          bot = Object.create(robot);

          bot.name = 'pebble';

          Cylon.robot(Object.create(bot));

          Cylon.start();

    %h3 CoffeeScript
    :markdown
          :::javascript

          Cylon = require('cylon')

          Cylon.api host: '0.0.0.0', port: '8080'

          robot = 
            connection:
              name: 'pebble', adaptor: 'pebble'

            device:
              name: 'pebble', driver: 'pebble'

            work: (self) ->
              c = 0
              every 1.second(), -> 
                c++
                self.pebble.message_queue().push(c)
                console.log(self.pebble.last_message())

          bot = Object.create(robot)
          bot.name = 'pebble'
          Cylon.robot Object.create(bot)
          Cylon.start()


  %section.compatability.hardware
    %h2 Works with:
    .devices
      = partial "documentation/partials/pebble"
