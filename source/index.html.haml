---
hero: true
social: true
catcher: true
menu_fixed: true
parallaxTop: true

title: Cylon.js - JavaScript framework for robotics, physical computing, and the Internet of Things using Node.js
author: The Hybrid Group
description: Cylon.js is a JavaScript framework for robotics, physical computing, and the Internet of Things using Node.js. It provides a simple, yet powerful way to create JavaScript robots that incorporate multiple, different hardware devices at the same time.
layout: home

hero_title: "JavaScript Robotics, By Your Command"

hero_subtitle: "Next generation robotics framework with support for <a href='#platforms'>22 different platforms</a>"


catcher_phrase: Ready to build the next big thing with JavaScript?
getting_started_button: "<a href='/documentation/getting-started' class='cta'> Get Started</a>"

---
:javascript
  $(document).ready(function(){
    $(".background-header").addClass("back-index-top");
  });

-content_for :black_top_title do

  %h2 Meet The Code

  %p Cylon.js makes it incredibly simple and fun to command robots.
  :markdown

    All you need to get started is the `cylon` npm module:

        :::javascript
        npm install cylon

  %p Then install modules for whatever hardware support you want to use from your robot.

%h2 Examples

%h3 Arduino:

%p Install modules for whatever hardware support you want to use from your robot. For the example below, an Arduino using the Firmata protocol:

:markdown
      :::javascript
      npm install cylon-firmata

%p This example connects to an Arduino, and every second turns the LED either on, or off.

:markdown
      :::javascript
      var Cylon = require("cylon");

      // Initialize the robot
      var robot = Cylon.robot({
        // Change the port to the correct port for your Arduino.
        connection: { name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0' },
        device: { name: 'led', driver: 'led', pin: 13 },

        work: function(my) {
          // we do our thing here
          every((1).second(), function() { my.led.toggle(); });
        }
      });

      // start working
      robot.start();

%h3 More Examples

%p
  We've got
  = link_to "lots more examples here", "/documentation/examples"
  to help you get started.

%h2#platforms Platform Support
%div
  %p Cylon.js has a extensible system for connecting to hardware devices. The following robotics and physical computing system, and software platforms, are currently supported:

  %ul.homepage-platform
    %li
      %a{:href => "/documentation/platforms/ardrone"}
        %p.title ARDrone
        %img{src: "/images/devices/ardrone.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-ardrone", target:"_blank"
    %li 
      %a{:href => "/documentation/platforms/arduino"}
        %p.title Arduino
        %img{src: "/images/devices/arduino.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-firmata", target:"_blank"

    %li 
      %a{:href => "/documentation/platforms/yun"}
        %p.title Arduino Yun
        %img{src: "/images/devices/arduino-yun.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-firmata", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/beaglebone"}
        %p.title Beaglebone Black
        %img{src: "/images/devices/beaglebone.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-beaglebone", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/crazyflie"}
        %p.title Crazyflie
        %img{src: "/images/devices/crazyflie.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-crazyflie", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/digispark"}
        %p.title Digispark
        %img{src: "/images/devices/digispark.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-digispark", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/galileo"}
        %p.title Galileo
        %img{src: "/images/devices/galileo.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-galileo", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/joystick"}
        %p.title Joystick
        %img{src: "/images/devices/joystick.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-joystick", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/keyboard"}
        %p.title Keyboard
        %img{src: "/images/devices/keyboard.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-keyboard", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/leapmotion"}
        %p.title Leap Motion
        %img{src: "/images/devices/leap_motion.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-leapmotion", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/nest"}
        %p.title Nest
        %img{src: "/images/devices/nest.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-nest", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/neurosky"}
        %p.title Neurosky
        %img{src: "/images/devices/neurosky.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-neurosky", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/opencv"}
        %p.title OpenCV
        %img{src: "/images/devices/opencv.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-opencv", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/pebble"}
        %p.title Pebble
        %img{src: "/images/devices/pebble.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-pebble", target:"_blank"
    %li
      %a{:href => "/documentation/platforms/pinoccio"}
        %p.title Pinoccio
        %img{src: "/images/devices/pinoccio.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-pinoccio", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/rapiro"}
        %p.title Rapiro
        %img{src: "/images/devices/rapiro.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-raspi", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/raspberry-pi"}
        %p.title Raspberry Pi
        %img{src: "/images/devices/raspi.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-raspi", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/force"}
        %p.title Salesforce
        %img{src: "/images/devices/force.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-force", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/skynet"}
        %p.title Skynet
        %img{src: "/images/devices/skynet.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-skynet", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/spark"}
        %p.title Spark
        %img{src: "/images/devices/spark.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-spark", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/sphero"}
        %p.title Sphero
        %img{src: "/images/devices/sphero.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-sphero", target:"_blank"

    %li
      %a{:href => "/documentation/platforms/tessel"}
        %p.title Tessel
        %img{src: "/images/devices/tessel.jpg", style: "width: 90%"}
      .repo
        = link_to "repo", "https://github.com/hybridgroup/cylon-tessel", target:"_blank"

  .clear

%p Support for many devices that use General Purpose Input/Output (GPIO) have a shared set of drivers provided using the cylon-gpio module:


%ul.homepage-platform
  %li
    %a{:href => "/documentation/drivers/analog-sensor"}
      %p.title Analog Sensor
      %img{src: "/images/devices/analog-sensor.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/button"}
      %p.title Button
      %img{src: "/images/devices/button.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/continuous-servo"}
      %p.title Continuous Servo
      %img{src: "/images/devices/continuous-servo.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/direct-pin"}
      %p.title Direct Pin
      %img{src: "/images/devices/direct-pin.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"

  %li
    %a{:href => "/documentation/drivers/ir-range-finder"}
      %p.title IR Rangefinder
      %img{src: "/images/devices/ir-range-finder.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/led"}
      %p.title LED
      %img{src: "/images/devices/LED.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/makey-button"}
      %p.title MakeyButton
      %img{src: "/images/devices/makey-button.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/motor"}
      %p.title Motor
      %img{src: "/images/devices/motor.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/maxbotix"}
      %p.title Maxbotix
      %img{src: "/images/devices/maxbotix.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/servo"}
      %p.title Servo
      %img{src: "/images/devices/servo.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-gpio", target:"_blank"
  .clear

%p Support for devices that use Inter-Integrated Circuit (I2C) have a shared set of drivers provded using the cylon-i2c module:

%ul.homepage-platform
  %li
    %a{:href => "/documentation/drivers/blinkm"}
      %p.title BlinkM
      %img{src: "/images/devices/blinkm.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-i2c", target:"_blank"

  %li
    %a{:href => "/documentation/drivers/bmp180"}
      %p.title BMP180
      %img{src: "/images/devices/bmp180.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-i2c", target:"_blank"

  %li
    %a{:href => "/documentation/drivers/hmc6352-compass"}
      %p.title HMC6352
      %img{src: "/images/devices/hmc6352-compass.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-i2c", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/lcd"}
      %p.title LCD
      %img{src: "/images/devices/lcd.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-i2c", target:"_blank"
  %li
    %a{:href => "/documentation/drivers/mpl115a2"}
      %p.title MPL115A2
      %img{src: "/images/devices/mpl115a2.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-i2c", target:"_blank"

  %li
    %a{:href => "/documentation/drivers/mpu6050"}
      %p.title MPU6050
      %img{src: "/images/devices/mpu6050.jpg", style: "width: 90%"}
    .repo
      = link_to "repo", "https://github.com/hybridgroup/cylon-i2c", target:"_blank"

  .clear


%h2 CLI
%p Cylon uses the Gort (<a href="http://gort.io">http://gort.io</a>) Command Line Interface (CLI) so you can access important features right from the command line. We call it "RobotOps", aka "DevOps For Robotics". You can scan, connect, update device firmware, and more!

%p Cylon also has its own CLI to generate new robots, adaptors, and drivers.

%p <a href="/documentation/guides/cli">Check out the Cylon CLI docs here</a>.

%h2  Be Part Of The Robot Evolution
:markdown
  - Code on Github:   [https://github.com/hybridgroup/cylon](https://github.com/hybridgroup/cylon)
  - Follow us on Twitter:   [@cylonjs](http://twitter.com/cylonjs)
  - Join us on IRC:   `#cylon @ irc.freenode.net`
  - Join us on our [Trello Board](https://trello.com/b/l1aEuqMU/cylon).
