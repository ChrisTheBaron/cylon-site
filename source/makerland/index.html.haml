---
title: Cylon.js - Makerland
author: The Hybrid Group
page_title: Makerland
page_subtitle: Workshop
layout: documentation
page_title_show: true
---

%section.makerland
  %h2 Installation
  %ul
    %li
      %p
        First, install
        =link_to "Node.js","http://nodejs.org/download/"
      %p
        If you already have Node.js installed, you can skip to the next step.
    %li
      %p
        Now, make sure you have all the dependencies listed
        =link_to "here.","https://github.com/TooTallNate/node-gyp#installation"
      %p
        If you have already installed node-serialport, then you already have this, and can skip to the next step.
    %li
      %p
        Next up, install Cylon.js globally, so you can make use of the CLI commands it provides:
        :markdown
              $ npm install -g cylon
      %p
        Once that's finished, you should be able to check if it's working by
        opening another terminal window and entering this command, which should
        give you a similar result:
        :markdown
              $ which cylon
              /usr/local/bin/cylon
    %li
      %p
        With that done, install the Cylon.js node modules into your working directory:
        :markdown
              $ npm install cylon cylon-gpio cylon-i2c cylon-firmata cylon-sphero cylon-leapmotion
    %li
      %p
        Install the
        =link_to "Leap Motion","https://www.leapmotion.com/setup"
        software.

    %li
      %p Install the Firmata software onto your Arduino board as follows:

      %ul
        %li
          Use
          %code cylon scan serial
          to find your connection info and serial port address:
          :markdown
                  $ cylon scan serial

        %li
          Use
          %code cylon firmata install
          to install
          %code avrdude
          , which will let you upload Firmata to the Arduino.
          :markdown
                  $ cylon firmata install

        %li
          Once
          %code avrdude
          is installed, we can upload the Firmata protocol to the Arduino with
          %code cylon firmata upload
          \. Use the Arduino serial port you found when running
          %code cylon scan serial
          \. By default, it will attempt to upload to
          %code /dev/ttyACM0
          \.
          :markdown
                  $ cylon firmata upload /dev/ttyACM0

  %h2 Test Your Install - Arduino Blink
  %p You can now test your installation. Plug in your Arduino, and run the following code, that makes the built-in LED on your Arduino turn on/off every second:

  %h3 JavaScript
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          // change the port below to match whatever your Arduino is actually plugged into
          connection: { name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0' },
          device: {name: 'led', driver: 'led', pin: 13},

          work: function(my) {
            every((1).seconds(), function() {my.led.toggle()});
          }
        }).start();

  %p Please note that you might need to change the value for port.
  %p
    Use the same port you used earlier when uploading Firmata to your Arduino,
    or find it again with
    %code cylon scan serial
    \.

%section.makerland
  %h2 Makey button
  %img{:src => "/documentation/drivers/breadboards/gpio/makey_button_bb.png", :alt => "", :style => "width:50%"}
  %h3 Javascript
  :markdown
        :::javascript

        //makey.js
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0' },
          devices: [
            {name: 'led', driver: 'led', pin: 13},
            { name: 'makey', driver: 'makey-button', pin: 2 }
          ],

          work: function(my) {
            my.makey.on('push', function() {
              my.led.toggle();
            });
          }
        }).start();

  %h2 Sphero Color
  %h3 Javascript
  :markdown
        :::javascript
        //sphero_color.js
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'sphero', adaptor: 'sphero', port: '/dev/rfcomm0' },
          device: { name: 'sphero', driver: 'sphero' },

          work: function(me) {
            every((1).second(), function() {
              me.sphero.setRGB(Math.floor(Math.random() * 100000));
            });
          }
        }).start();

  %h2 Sphero Makey Button
  %h3 Javascript
  :markdown
        :::javascript
        //sphero_makey_button.js
        var Cylon = require('cylon');
 
        Cylon.robot({
          connections: [
            { name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0' },
            { name: 'sphero', adaptor: 'sphero', port: '/dev/rfcomm0' }
          ]
          devices: [
            { name: 'sphero', driver: 'sphero', connection: 'sphero'},
            { name: 'forward', driver: 'makey-button', connection: 'arduino', pin: 2 },
            { name: 'back', driver: 'makey-button', connection: 'arduino',pin: 3 },
            { name: 'left', driver: 'makey-button', connection: 'arduino',pin: 4 },
            { name: 'right', driver: 'makey-button', connection: 'arduino',pin: 5 }
          ],
         
          work: function(my) {
            my.forward.on('push', function() {
              my.sphero.roll(0, 90)
            });
            my.forward.on('release', function() {
              my.sphero.stop()
            });
         
            my.back.on('push', function() {
              my.sphero.roll(180, 90);
            });
            my.back.on('release', function() {
              my.sphero.stop()
            });
         
            my.right.on('push', function() {
              my.sphero.roll(90, 90);
            });
            my.right.on('release', function() {
              my.sphero.stop()
            });
         
            my.left.on('push', function() {
              my.sphero.roll(270, 90);
            });
            my.left.on('release', function() {
              my.sphero.stop()
            });
          }
        }).start();

  %h2 Leap
  %h3 Javascript
  :markdown
        :::javascript

        //leap.js
        var Cylon = require('cylon');

        Cylon.robot({
          connection: { name: 'leapmotion', adaptor: 'leapmotion', port: '127.0.0.1:6437' },
          device: { name: 'leapmotion', driver: 'leapmotion' },

          work: function(my) {
            my.leapmotion.on('connect', function() {
              Logger.info("Connected");
            });

            my.leapmotion.on('start', function() {
              Logger.info("Started");
            });

            my.leapmotion.on('frame', function(frame) {
              Logger.info(frame.toString());
            });

            my.leapmotion.on('hand', function(hand) {
              Logger.info(hand.toString());
            });

            my.leapmotion.on('pointable', function(pointable) {
              Logger.info(pointable.toString());
            });

            my.leapmotion.on('gesture', function(gesture) {
              Logger.info(gesture.toString());
            });
          }
        }).start();

  %h2 Leap sphero
  %h3 Javascript
  :markdown
        :::javascript

        //leap_sphero.js
        var Cylon = require('cylon');

        Cylon.robot({
          connections: [
            { name: 'leapmotion', adaptor: 'leapmotion', port: '127.0.0.1:6437' },
            { name: 'sphero', adaptor: 'sphero', port: '/dev/rfcomm0' }
          ],
          devices: [
            { name: 'leapmotion', driver: 'leapmotion', connection: 'leapmotion' },
            { name: 'sphero', driver: 'sphero', connection: 'sphero'}
          ],
          work: function(my) {
            my.leapmotion.on('hand', function(hand) {
              var r = hand.palmY.fromScale(100, 600).toScale(0, 255) | 0;
              my.sphero.setRGB(r, 0, 0);
            });
          }
        }).start();
